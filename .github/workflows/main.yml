name: node_app

on:
  workflow_run:
    workflows: [Code Coverage]
    types: [completed]

jobs:
  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: coverage
    if: ${{ needs.coverage.result == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/testci:latest-${{ github.ref_name }}

  coverage:
    runs-on: ubuntu-latest
    jobs:
      build:
        runs-on: ubuntu-latest
        strategy:
          matrix:
            node-version: [20.x]
        steps:
          - name: Checkout repository
            uses: actions/checkout@v2

          - name: Set up Node.js ${{ matrix.node-version }}
            uses: actions/setup-node@v1
            with:
              node-version: ${{ matrix.node-version }}

          - name: Install dependencies
            run: npm install

          - name: Run the tests
            run: npm test -- --coverage

  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo 'The triggering workflow passed'

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
